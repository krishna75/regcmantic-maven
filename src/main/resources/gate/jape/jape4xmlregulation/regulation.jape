/** Identifies regulation*/Phase: xml_regulationInput: SentenceOptions: control = appeltRule: RegulationFinderPriority:90 ({Sentence}):sen-->{	// obtains the annotation for whole style	AnnotationSet senAS = (AnnotationSet)bindings.get("sen");			AnnotationSet origMarkAS = doc.getAnnotations("Original markups");		// get "topic" annotations info from within "Original markups"	AnnotationSet topicAS = origMarkAS.get("topic");	for(Annotation topicAnn : topicAS)	{		// adding features to the annotation		FeatureMap features = Factory.newFeatureMap();		features.put("rule","RegulationFinder");				// adding string of the annotation to the fetures. It needs start and end node offsets as int values		int intStart = topicAnn.getStartNode().getOffset().intValue();		int intEnd = topicAnn.getEndNode().getOffset().intValue();		features.put("startNode",intStart);		features.put("endNode", intEnd);		String text = doc.getContent().toString().substring(intStart, intEnd);			features.put("text",text);				// finally adding the feature with the annotation. 		outputAS.add(topicAnn.getStartNode(), topicAnn.getEndNode(), "Topic",features);      	}		// get " topic title" annotations info from within "Original markups"	AnnotationSet titleAS = origMarkAS.get("title");	for(Annotation titleAnn : titleAS)	{		// adding features to the annotation		FeatureMap features = Factory.newFeatureMap();		features.put("rule","RegulationFinder");				// adding string of the annotation to the fetures. It needs start and end node offsets as int values		int intStart = titleAnn.getStartNode().getOffset().intValue();		int intEnd = titleAnn.getEndNode().getOffset().intValue();		features.put("startNode",intStart);		features.put("endNode", intEnd);		String text = doc.getContent().toString().substring(intStart, intEnd);			features.put("text",text);				// finally adding the feature with the annotation. 		outputAS.add(titleAnn.getStartNode(), titleAnn.getEndNode(), "Title",features);      	}		// get "topic-text" annotations info from within "Original markups"	AnnotationSet topicTextAS = origMarkAS.get("topic_text");	for(Annotation topicTextAnn : topicTextAS)	{		// adding features to the annotation		FeatureMap features = Factory.newFeatureMap();		features.put("rule","RegulationFinder");				// adding string of the annotation to the fetures. It needs start and end node offsets as int values		int intStart = topicTextAnn.getStartNode().getOffset().intValue();		int intEnd = topicTextAnn.getEndNode().getOffset().intValue();		features.put("startNode",intStart);		features.put("endNode", intEnd);		String text = doc.getContent().toString().substring(intStart, intEnd);			features.put("text",text);				// finally adding the feature with the annotation. 		outputAS.add(topicTextAnn.getStartNode(), topicTextAnn.getEndNode(), "TopicText",features);      	}	// get "regulation" annotations info from within "Original markups"	AnnotationSet regAS = origMarkAS.get("regulation");	for(Annotation regAnn : regAS)	{		// adding features to the annotation		FeatureMap features = Factory.newFeatureMap();		features.put("rule","RegulationFinder");				// adding string of the annotation to the fetures. It needs start and end node offsets as int values		int intStart = regAnn.getStartNode().getOffset().intValue();		int intEnd = regAnn.getEndNode().getOffset().intValue();		features.put("startNode",intStart);		features.put("endNode", intEnd);		String text = doc.getContent().toString().substring(intStart, intEnd);			features.put("text",text);				// finally adding the feature with the annotation. 		outputAS.add(regAnn.getStartNode(), regAnn.getEndNode(), "Regulation",features);      	} 		// get "reg-id" annotations info from within "Original markups"	AnnotationSet idAS = origMarkAS.get("reg_id");	for(Annotation idAnn : idAS)	{		// adding features to the annotation		FeatureMap features = Factory.newFeatureMap();		features.put("rule","RegulationFinder");				// adding string of the annotation to the fetures. It needs start and end node offsets as int values		int intStart = idAnn.getStartNode().getOffset().intValue();		int intEnd = idAnn.getEndNode().getOffset().intValue();		features.put("startNode",intStart);		features.put("endNode", intEnd);		String text = doc.getContent().toString().substring(intStart, intEnd);			features.put("text",text);				// finally adding the feature with the annotation. 		outputAS.add(idAnn.getStartNode(), idAnn.getEndNode(), "RegID",features);      	}		// get "reg-text" annotations info from within "Original markups"	AnnotationSet regTextAS = origMarkAS.get("reg_text");	for(Annotation regTextAnn : regTextAS)	{		// adding features to the annotation		FeatureMap features = Factory.newFeatureMap();		features.put("rule","RegulationFinder");				Node node = regTextAnn.getStartNode();		Node startNode = new NodeImpl(node.getId(), node.getOffset()-1);				// adding string of the annotation to the fetures. It needs start and end node offsets as int values		int intStart = startNode.getOffset().intValue();		int intEnd = regTextAnn.getEndNode().getOffset().intValue();		features.put("startNode",intStart);		features.put("endNode", intEnd);		String text = doc.getContent().toString().substring(intStart, intEnd);			features.put("text",text);						// finally adding the feature with the annotation. 		outputAS.add(startNode, regTextAnn.getEndNode(), "RegText",features);      	}			  	  // remove the fake annotation "Sentence" 	  inputAS.remove((gate.Annotation)(senAS).iterator().next());}