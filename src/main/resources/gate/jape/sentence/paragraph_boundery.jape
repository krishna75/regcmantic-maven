/*
* identifies start and end points of a paragraph.
*/
Phase: original_markups
Input:  paragraph
Options: control=appelt

/* rule */
Rule: ParaBoundary
Priority:90	
 ({paragraph}):text
-->
{
// obtains the annotation
AnnotationSet paraAS = (AnnotationSet)bindings.get("text");

int diff = 1;
int nodeId = 99991;

/* defines  paragraph start annotation*/
// defining first  node offsets
int firstStart = paraAS.firstNode().getOffset().intValue()+1;
int firstEnd = firstStart+diff;

// defining new nodes (NodImpl)
NodeImpl node1 = new NodeImpl( new Integer(nodeId + firstStart *2), new Long(firstStart));
NodeImpl node2= new NodeImpl( new Integer(nodeId + firstEnd * 2), new Long(firstEnd));

// adding features to the annotation
gate.FeatureMap features = Factory.newFeatureMap();
features.put("rule","ParaBoundary");
features.put("type","paragraph");

// adding string of the annotation to the fetures. It needs start and end node offsets as int values
features.put("startNode",firstStart);
features.put("endNode", firstEnd);
features.put("text","");
	
// finally adding the feature with the annotation. 
outputAS.add(node1, node2, "paragraph_start",features);

/* defines  paragraph end annotation */
// defining last node offsets
int lastEnd = paraAS.lastNode().getOffset().intValue()-1;
int lastStart = lastEnd-diff;

// defining new nodes (NodImpl)
NodeImpl node3 = new NodeImpl( new Integer(nodeId + lastStart *2), new Long(lastStart));
NodeImpl node4= new NodeImpl( new Integer(nodeId + lastEnd *2), new Long(lastEnd));

// adding features to the annotation
gate.FeatureMap features2 = Factory.newFeatureMap();
features.put("rule","ParaBoundary");
features.put("type","paragraph");

// adding string of the annotation to the fetures. It needs start and end node offsets as int values
features2.put("startNode",lastStart);
features2.put("endNode", lastEnd);
features2.put("text","");
	
// finally adding the feature with the annotation. 
outputAS.add(node3, node4, "paragraph_end",features2);
}