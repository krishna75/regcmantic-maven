/**
* Identifies the phrase that answers "where".
*/
Phase:where
Input:  Lookup Token SpaceToken  action  sentence_end
Options: control = first

/* simple macros */
Macro: TOKEN 		({Token})
Macro: SPACETOKEN 	({SpaceToken})
Macro: NNP 			({Token.category == NNP}) 
Macro: NNPS 		({Token.category == NNPS})
Macro: NN 			({Token.category == NN})
Macro: NNS 			({Token.category == NNS})
Macro: PLACE		({Lookup.majorType == "place"})
Macro: IN			({Token.string=="in"})
Macro: INTO			({Token.string=="into"})
Macro: INSIDE		({Token.string=="inside"})
Macro: ACT			({action})
Macro: VB 			({Token.category == VB}) 
Macro: SENTENCE_END ({sentence_end})

/* complex macros */

Macro: NOUN_ALL ((NOUN)[1,3]) // all the noun 1 to three times
Macro: WHERE ( // defines the rule
	((IN|INTO|INSIDE) (TOKEN|SPACETOKEN)[1,10] (PLACE)):where
)

/* rule: */
Rule: WhereFinder	 
Priority:90
(
	WHERE	
)
-->
{
// obtains the annotation
gate.AnnotationSet whereAS = (gate.AnnotationSet)bindings.get("where");
gate.Annotation whereAnn = (gate.Annotation)whereAS.iterator().next();

// adding features to the annotation
gate.FeatureMap features = Factory.newFeatureMap();
features.put("rule","WhereFinder");

// adding string of the annotation to the fetures. It needs start and end node offsets as int values
int sNode = whereAS.firstNode().getOffset().intValue();
int eNode = whereAS.lastNode().getOffset().intValue();
features.put("startNode",sNode);
features.put("endNode", eNode);
String theWord = doc.getContent().toString().substring(sNode, eNode);		
features.put("text",theWord);

outputAS.add(whereAS.firstNode(), whereAS.lastNode(), "where",features);
}