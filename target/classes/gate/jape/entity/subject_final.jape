/*
* converts original markups ( annotation from the xml file) to starndard gate annotations.
*/
Phase: subject_final
Input:  subject_container
Options: control = appelt
 
/* rule */
Rule: SubjectRefiner
Priority:90	
({subject_container}):ann
-->
{
// obtains the annotation
gate.AnnotationSet containerSet = (gate.AnnotationSet)bindings.get("ann");
gate.AnnotationSet containedSet = inputAS.getContained(containerSet.firstNode().getOffset(), containerSet.lastNode().getOffset());	
Set selectedSet = new HashSet();
selectedSet.add("rule_subject");
selectedSet.add("definition_term");
selectedSet.add("extracted_term");
selectedSet.add("concept_ontology");
selectedSet.add("noun_phrase");
Iterator annIter = containedSet.get(selectedSet).iterator();

/*   */
while (annIter.hasNext()){
	gate.Annotation ann = (Annotation) annIter.next();
	
	// get features from the annotation
	String startNode = ann.getFeatures().get("startNode").toString();
	String endNode = ann.getFeatures().get("endNode").toString();
	String rule = ann.getFeatures().get("rule").toString();
	String text = ann.getFeatures().get("text").toString();

	// creating new annotation
	gate.FeatureMap features = Factory.newFeatureMap();
	features.put("rule","SubjectRefiner");
	int sNode = Integer.valueOf(startNode);
	int eNode = Integer.valueOf(endNode);
	features.put("startNode",sNode);
	features.put("endNode", eNode);		
	features.put("text", text);
	outputAS.add(ann.getStartNode(), ann.getEndNode(), "_SUBJECT",features);
}
}