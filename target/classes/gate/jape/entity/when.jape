/**
* Identifies the phrase that answers "when".
*/
Phase:when
Input:  Lookup Token SpaceToken  action  sentence_end
Options: control = first

/* simple macros */
Macro: TOKEN 		({Token})
Macro: SPACETOKEN 	({SpaceToken})
Macro: TIME_T 		({Lookup.majorType == "time",Lookup.minorType=="transitive"})
Macro: TIME_IN 		({Lookup.majorType == "time",Lookup.minorType=="intransitive"})
Macro: COMMA		({Token.string==","})
Macro: DOT 			({Token.string=="."})
Macro: COLON		({Token.string==":"})
Macro: SEMI_COLON	({Token.string==";"})
Macro: BRACKET_END	({Token.string==")"})
Macro: BRACKET_START({Token.string=="("})
Macro: ACT			({action})
Macro: VB 			({Token.category == VB}) 
Macro: SENTENCE_END ({sentence_end})

/* complex macros */
Macro: END ( // end node of the annotation
	SENTENCE_END | COMMA | DOT | COLON | SEMI_COLON | BRACKET_START |BRACKET_END
)
Macro: WHEN ( // defines the rule
	((TIME_T (TOKEN|SPACETOKEN)+ ):when END) |
	( (TIME_IN):when)
)

/* rule: */
Rule: WhenFinder	 
Priority:90
(
	WHEN	
)
-->
{
// obtains the annotation
gate.AnnotationSet whenAS = (gate.AnnotationSet)bindings.get("when");
//gate.Annotation whenAnn = (gate.Annotation)whenAS.iterator().next();

// adding features to the annotation
gate.FeatureMap features = Factory.newFeatureMap();
features.put("rule","WhenFinder");

// adding string of the annotation to the fetures. It needs start and end node offsets as int values
int sNode = whenAS.firstNode().getOffset().intValue();
int eNode = whenAS.lastNode().getOffset().intValue();
features.put("startNode",sNode);
features.put("endNode", eNode);
String theWord = doc.getContent().toString().substring(sNode, eNode);		
features.put("text",theWord);

outputAS.add(whenAS.firstNode(), whenAS.lastNode(), "when",features);
}