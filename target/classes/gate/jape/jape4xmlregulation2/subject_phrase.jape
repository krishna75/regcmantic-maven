/*
*
*/
Phase: subject
Input:  Token Obligation Split 
Options: control = all 

// making short names for the categories
Macro: CC ( {Token.category== CC})
Macro: CD ( {Token.category == CD})
Macro: COMMA ( {Token.string == ","})
Macro: NNP ( {Token.category == NNP}) 
Macro: NNPS ( {Token.category == NNPS})
Macro: JJ ({Token.category == JJ})
Macro: NN ({Token.category == NN})
Macro: NNS ( {Token.category == NNS})
Macro: VBN ({Token.category == VBN})
Macro: VBNS ({Token.category == VBNS})
Macro: DT ({Token.category == DT})
Macro: IN ({Token.category == IN})
Macro: POS ({Token.category == POS})
Macro: PRP ({Token.category == PRP})
Macro: PRP_D ({Token.category == "PRP$"})
Macro: PRPR_D ({Token.category == "PRPR$"})
Macro: LRB ( {Token.category == LRB}) //-LRB- - -unknown-
Macro: VBD ({Token.category == VBD})
Macro: VBG ({Token.category == VBG})
Macro: OBL ({Obligation})
Macro: TKN ({Token})
Macro: SPLIT ({Split})
Macro: THE ({Token.string == "the"})
Macro: AN ({Token.string == "an"})
Macro: A ({Token.string == "a"})
Macro: TO ({Token.string == "to"})
Macro: OF ({Token.string == "of"})
Macro: FOR ({Token.string == "for"})
Macro: DURING ({Token.string == "during"})
Macro: ON ({Token.string == "on"})
Macro: IN ({Token.string == "in"})
Macro: FROM ({Token.string == "from"})
//Macro: SPACE ({SpaceToken})

Macro: ARTICLE(
A|AN|THE
)

Macro: CONJ (
 (CC) | (COMMA)
)

Macro: CD_ALL (
// three, four
	(CD)+
)

Macro: VB_ADJ (
	(	{!Token.string =~ "is"} |
		{!Token.string =~ "was"}|
		{!Token.string =~ "were"}|
		{!Token.string =~ "has"}|
		{!Token.string =~ "have"}|
		{!Token.string =~ "had"}|
		{!Token.string =~ "be"}
	)

	(VBD | VBG | VBN )
)

Macro: VBADJ_ALL (
	(CONJ)? (VB_ADJ)
)

// Macro: NO_SPLIT (
	// {!Split}
// )

Macro: NO_OBL (
 {!obligation}
)

//  Materials to be reprocessed/VBN or reworked/VBN should be appropriately controlled to 
Macro: VBN_ALL (
	((CONJ)?(VBN)) |
	VBADJ_ALL
)

Macro: JJ_ALL (
	(JJ)	
)

Macro: POS_ALL (
 ((POS)|(PRP_D)|(PRPR_D))
)

Macro: NNP_ALL (
		
		(	((NNP) (NNPS)?) |
			((NNPS) (NNP)?) 
		)			
)

// 
Macro: NN_ALL (
		(	((NN) (NNS)?) |
			((NNS) (NN)?) 
		)		
)


Macro: NOUN (	
		NN_ALL |
		NNP_ALL
)

Macro: NOUN_ALL (	
		(NOUN)[1,3]
)

Macro: PREP_NOUN (
NOUN_ALL (TO|FROM|IN|ON|OF|FOR|DURING )(ARTICLE)? NOUN_ALL
)


Rule: subjectPhrase
Priority:100(
 PREP_NOUN
):sub
-->
{
// obtains the annotation
gate.AnnotationSet annSet = (gate.AnnotationSet)bindings.get("sub");

// adding features to the annotation
gate.FeatureMap features = Factory.newFeatureMap();
features.put("category","nn");
features.put("kind","defined");

// adding string to the feature
int sNode = annSet.firstNode().getOffset().intValue();
int eNode = annSet.lastNode().getOffset().intValue();
features.put("startNode",sNode);
features.put("endNode", eNode);
String theWord = doc.getContent().toString().substring(sNode, eNode);		
features.put("text",theWord);
// setting output
outputAS.add(annSet.firstNode(), annSet.lastNode(), "SubjectPhrase",features);
}















