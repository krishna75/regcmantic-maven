/* split annotation */
//AnnotationSet paraAS = doc.getAnnotations("paragraph");
AnnotationSet requiredAS = paraAS.get("Split");
Iterator<Annotation> requiredIter = requiredAS.iterator();
while (requiredIter.hasNext()){
		Annotation requiredAnn = requiredIter.next();		
		
		// adding features to the annotation
		FeatureMap features3 = Factory.newFeatureMap();
		features3.put("rule","SentenceFinder");
		
		// adding string of the annotation to the fetures. It needs start and end node offsets as int values 
		int n5 = requiredAnn.getStartNode().getOffset().intValue()+1;
		int n6 = n5+1;
		int n8 = requiredAnn.getEndNode().getOffset().intValue();
		int n7 = n8-1;
		NodeImpl node5 = new NodeImpl( new Integer(10005+n1), new Long(n5));
		NodeImpl node6= new NodeImpl( new Integer(10006+n1), new Long(n6));
		outputAS.add(node5, node6, "split_start",features3);
		
		NodeImpl node7 = new NodeImpl( new Integer(10007+n1), new Long(n7));
		NodeImpl node8= new NodeImpl( new Integer(10008+n1), new Long(n8));
		outputAS.add(node7, node8, "split_end",features3);
}//  while	